class MyRectangle {
public uint width;
public uint height;
private uint area;
public uint GetArea()
{
if ( area == 0 )  {
area = width * height;
}
return area;
}

-----------------------------
class MyRectangle {
private uint width;
private uint height;
private uint area;
public uint Width {
get {
return width;
}
set {
width = value;
ComputeArea();
}
public uint Height {
get
{
return height;
}
set {
height = value;
ComputeArea() ;
}
public uint Area {
get {
return area;
}
private void ComputeArea() {
area = width * height;
}

-------------------------------
class MyClass
    {
        int a; //по умолчанию private 
        private int sum(int b)
        {
            return this.a + b + this.x;
        }
        protected int x = 5;
        public void ShowSum(int b)
        {
            MessageBox.Show(this.sum(b).ToString());
        }

        public MyClass() {
            this.a = 0;
        }
        public MyClass(int a) {
            this.a = a;
        }
    }

class MySecondClass: MyClass
    {
        public MySecondClass(int x)
        {
            //this.a = x; - это не верная строка
            //переменная 'a' и функция 'sum' в наследнике не доступны 
            this.x = x;
            this.ShowSum(this.x);
        }
    }


MyClass MC = new MyClass(1);
MC.ShowSum(4); //Выведет 10
MySecondClass MSC = new MySecondClass(10); //Выведет 20